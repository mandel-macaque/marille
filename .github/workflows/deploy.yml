# yamllint disable rule:line-length
# deployes the build to nuget and github releases
name: Continuous Deployment

concurrency:
  group: "deployment"
  cancel-in-progress: false

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  actions: read
  pages: write
  id-token: write

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

permissions:
  packages: write

env:
  NuGetDirectory: ${{ github.workspace}}/nuget

jobs:
  build:
    name: Build package
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Set Version Variable
        if: ${{ github.ref_type == 'tag' }}
        env:
          TAG: ${{ github.ref_name }}
        run: echo "VERSION=${TAG#v}" >> $GITHUB_ENV

      - name: Build project
        run: dotnet build -c Release /p:Version=$VERSION
        working-directory: ./src

      - name: Create the package
        run: dotnet pack -c Release -o ${{ env.NuGetDirectory }} /p:PackageVersion=$VERSION
        working-directory: ./src

      - name: Upload Package for Publishing
        uses: actions/upload-artifact@v4
        with:
          name: nuget
          if-no-files-found: error
          retention-days: 7
          path: ${{ env.NuGetDirectory }}/*.nupkg

  publish-docs:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Install Docfx
        run: dotnet tool update -g docfx

      - name: Run Docfx
        run: docfx docs/docfx.json

      - name: Upload docs page 
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'docs/_site'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  validate-nuget:
    name: Validate nuget
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Download built project
        uses: actions/download-artifact@v4
        with:
          name: nuget
          path: ${{ env.NuGetDirectory }}

      - name: Install nuget validator
        run: dotnet tool update Meziantou.Framework.NuGetPackageValidation.Tool --global

      - name: Validate package
        shell: pwsh
        run: meziantou.validate-nuget-package (Get-ChildItem "${{ env.NuGetDirectory }}/*.nupkg") --excluded-rules IconMustBeSet

  github-publish:
    needs: [build, validate-nuget]
    name: Publish to Github
    runs-on: ubuntu-latest

    steps:
      - name: Download built project
        uses: actions/download-artifact@v4
        with:
          name: nuget
          path: ${{ env.NuGetDirectory }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Publish NuGet package
        shell: pwsh
        run: |
          foreach($file in (Get-ChildItem "${{ env.NuGetDirectory }}" -Recurse -Include *.nupkg)) {
              dotnet nuget push $file --api-key "${{ secrets.GITHUB_TOKEN }}" --source https://nuget.pkg.github.com/mandel-macaque/index.json --skip-duplicate
          }

  nuget-publish:
    needs: [ build, validate-nuget ]
    name: Publish to Nuget.org
    runs-on: ubuntu-latest

    steps:
    - name: Download built project
      uses: actions/download-artifact@v4
      with:
        name: nuget
        path: ${{ env.NuGetDirectory }}

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Publish NuGet package
      shell: pwsh
      run: |
        foreach($file in (Get-ChildItem "${{ env.NuGetDirectory }}" -Recurse -Include *.nupkg)) {
            dotnet nuget push $file --api-key "${{ secrets.NUGET_API_KEY }}" --source https://api.nuget.org/v3/index.json --skip-duplicate
        }
